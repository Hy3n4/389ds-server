---
- block:
    - set_fact:
        ldapi_389ds_config:
          - { name: "nsslapd-ldapilisten", value: "on" }
          - { name: "nsslapd-ldapifilepath", value: "/var/run/slapd-{{ serverid }}.socket" }
          - { name: "nsslapd-ldapiautobind", value: "on" }
          - { name: "nsslapd-ldapimaptoentries", value: "off" }
      when: ldapi_enabled
    - set_fact:
        ldapi_389ds_config:
          - { name: "nsslapd-ldapilisten", value: "off" }
          - { name: "nsslapd-ldapiautobind", value: "off" }
      when: not ldapi_enabled

    - name: Configure LDAPI
      ldap_attr:
        params: "{{ ldap_auth }}"
        dn: "cn=config"
        name: "{{ item.name }}"
        values: "{{ item.value }}"
        state: exact
      loop: "{{ ldapi_389ds_config }}"
      notify: dirsrv restart

  rescue:
    - name: Configure LDAPI over LDAPI
      ldap_attr:
        server_uri: "ldapi:///var/run/slapd-{{ serverid }}.socket"
        bind_dn: "{{ rootdn }}"
        bind_pw: "{{ rootdn_password }}"
        dn: "cn=config"
        name: "{{ item.name }}"
        values: "{{ item.value }}"
        state: exact
      loop: "{{ ldapi_389ds_config }}"
      notify: dirsrv restart

# Documentation: https://directory.fedoraproject.org/docs/389ds/design/sasl-mechanism-configuration.html
# TODO: none means "everything is allowed"... how to allow none (or just EXTERNAL that is always enabled but not always allowed or whatever?)
- block:
  - name: Configure SASL
    ldap_attr:
      params: "{{ ldap_auth }}"
      dn: "cn=config"
      name: "nsslapd-allowed-sasl-mechanisms"
      values: "{{ 'PLAIN' if sasl_plain_enabled else [] }}"
      state: exact
    register: sasl_result

  rescue:
    # Deleting an attribute fails if the the attribute doesn't exist,
    # yay for idempotence...
    - name: Assert that task failed successfully
      assert:
        that:
          - not sasl_result.changed
          - "'desc' in sasl_result.details"
          - "{{sasl_result.details}}.desc == 'No such attribute'"

- block:
  - name: Configure password storage scheme
    ldap_attr:
      params: "{{ ldap_auth }}"
      dn: "cn=config"
      name: "passwordStorageScheme"
      values: "{{ password_storage_scheme }}"
      state: exact
    register: pwdstorage_result

  rescue:
    # Same as above
    - name: Assert that task failed successfully
      assert:
        that:
          - not pwdstorage_result.changed
          - "'desc' in pwdstorage_result.details"
          - "{{pwdstorage_result.details}}.desc == 'No such attribute'"
